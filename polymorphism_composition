# Polymorphism & Composition Homework - Quiz

# Polymorphism

1. What does the ___word___ 'polymorphism' mean?

In object-oriented programming, polymorphism refers to a programming language's ability to process objects differently depending on their data type or class. More specifically, it is the ability to redefine methods for derived classes from a base method either on the abstract class or interface in Java.


2. What does it mean when we apply polymorphism to OO design? Give a simple Java example.

For example, given a base class shape, polymorphism enables the programmer to define different area methods for any number of derived classes, such as circles, rectangles and triangles. No matter what shape an object is, applying the area method to it will return the correct results. Polymorphism is considered to be a requirement of any true object-oriented programming language (OOPL).

3. What can we use to implement polymorphism in Java?

Interfaces or Inheritance(abstract classes).

4. How many 'forms' can an object take when using polymorphism?

An unlimited amount.


5. Give an example of when you could use polymorphism.



# Composition

6. What do we mean by 'composition' in reference to object-oriented programming?

7. When would you use composition? Provide a simple example in Java.

8. What is/are the advantage(s) of using composition?

9. What happens to the behaviours when the object composed of them is destroyed?
